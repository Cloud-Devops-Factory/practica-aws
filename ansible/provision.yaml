# https://docs.ansible.com/ansible/latest/user_guide/playbooks.html
# https://docs.ansible.com/ansible/latest/modules/hostname_module.html
# https://docs.ansible.com/ansible/latest/modules/lineinfile_module.html
# https://docs.ansible.com/ansible/latest/modules/template_module.html
# https://docs.ansible.com/ansible/latest/modules/copy_module.html
# https://docs.ansible.com/ansible/latest/modules/user_module.html
# https://docs.ansible.com/ansible/latest/modules/authorized_key_module.html
# https://docs.ansible.com/ansible/latest/modules/iptables_module.html
# https://docs.ansible.com/ansible/latest/modules/apt_module.html
# https://docs.ansible.com/ansible/latest/modules/yum_module.html
# https://docs.ansible.com/ansible/latest/modules/service_module.html

################################################################################
# Define scope and variables

- hosts: all
  become: yes
  vars:
    # dns_domain: redes.tonejito.cf
    dns_domain: admin-linux.tonejito.cf
    ssh_key_file: ~/.ssh/keys/aws-ciencias_rsa.pub
  tasks:

################################################################################
# Set hostname

  - name: Set hostname
    hostname:
      name: "{{ inventory_hostname }}.{{ dns_domain }}"
    tags:
    - hostname

  # - name: Get hostname
  #   command: hostname -f
  #   tags:
  #   - hostname
  #   register: output
  # - debug: var=output.stdout_lines
  #   tags:
  #   - hostname

################################################################################
# Add user and ssh key

  - name: Fix /etc/sudoers on Debian-like
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%sudo'
      line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'
    when: ansible_os_family == "Debian"
    tags:
    - user

  - name: Add user on Debian-like
    user:
      name: "{{ item }}"
      comment: "= ^ . ^ ="
      shell: /bin/bash
      group: adm
      groups: sudo,adm,dialout,cdrom,floppy,audio,dip,video,plugdev,netdev
      append: yes
      state: present
    with_items:
    - admin
    - tonejito
    when: ansible_os_family == "Debian"
    tags:
    - user

  - name: chattr -i ~/.ssh/authorized_keys
    file:
      path: ~{{ item }}/.ssh/authorized_keys
      attributes: -i
    with_items:
    - root
    - admin
    - tonejito
    tags:
    - user
    - chattr

  - name: Copy master SSH key
    authorized_key:
      user: "{{ item }}"
      state: present
      key: "{{ lookup('file', '{{ ssh_key_file }}') }}"
    with_items:
    - root
    - admin
    - tonejito
    tags:
    - user

  - name: Copy team SSH key
    authorized_key:
      user: "{{ item }}"
      state: present
      key: "{{ lookup('file', 'keys/{{ inventory_hostname }}_rsa.pub') }}"
    with_items:
    - admin
    tags:
    - user
    - keys

  - name: chattr +i ~/.ssh/authorized_keys
    file:
      path: ~{{ item }}/.ssh/authorized_keys
      attributes: +i
    with_items:
    - root
    - admin
    - tonejito
    when: ansible_distribution == "Debian"
    tags:
    - user
    - chattr

# ################################################################################
# # IPtables base profile
#
#   - name: Reset default policies
#     iptables:
#       chain: "{{ item }}"
#       policy: ACCEPT
#     with_items:
#     - INPUT
#     - OUTPUT
#     - FORWARD
#     when: ansible_distribution == "Debian"
#     tags:
#     - iptables
#
#   - name: Flush filter rules
#     iptables:
#       table: filter
#       chain: "{{ item }}"
#       flush: yes
#     with_items:
#     - INPUT
#     - FORWARD
#     - OUTPUT
#     when: ansible_distribution == "Debian"
#     tags:
#     - iptables
#
#   - name: Allow loopback input traffic
#     iptables:
#       chain: INPUT
#       in_interface: lo
#       jump: ACCEPT
#       comment: allow loopback input
#     when: ansible_distribution == "Debian"
#     tags:
#     - iptables
#
#   - name: Allow loopback output traffic
#     iptables:
#       chain: OUTPUT
#       out_interface: lo
#       jump: ACCEPT
#       comment: allow loopback output
#     when: ansible_distribution == "Debian"
#     tags:
#     - iptables
#
#   - name: Allow ESTABLISHED and RELATED connections
#     iptables:
#       chain: INPUT
#       ctstate: ESTABLISHED,RELATED
#       jump: ACCEPT
#       comment: allow ESTABLISHED and RELATED
#     when: ansible_distribution == "Debian"
#     tags:
#     - iptables
#
#   - name: Allow ICMP
#     iptables:
#       chain: INPUT
#       protocol: icmp
#       jump: ACCEPT
#       comment: allow icmp
#     when: ansible_distribution == "Debian"
#     tags:
#     - iptables
#
#   - name: Allow SSH
#     iptables:
#       chain: INPUT
#       protocol: tcp
#       destination_port: "22"
#       jump: ACCEPT
#       comment: allow ssh
#     when: ansible_distribution == "Debian"
#     tags:
#     - iptables

################################################################################
# Check final iptables rules

  - name: Check iptables rules
    command: iptables-save
    when: ansible_system == "Linux"
    tags:
    - iptables
    register: output
  - debug: var=output.stdout_lines
    tags:
    - iptables

################################################################################
# Install network services

  - name: Update apt cache on Debian-like
    apt:
      update_cache: yes
      cache_valid_time: 3600
    when: ansible_os_family == "Debian"
    tags:
    - packages
    - apt-update

################################################################################
# Install packages

  - name: Install packages on Debian-like
    apt:
      name:
      - ssh
      - net-tools
      - netcat-openbsd
      - elinks
      - wget
      - curl
      - mlocate
      - ncdu
      - xmlstarlet
      state: present
    when: ansible_os_family == "Debian"
    tags:
    - packages

################################################################################
# Enable and start network services

  - name: Enable and start service ssh on Debian-like
    service:
      name: ssh
      enabled: yes
      state: started
    when: ansible_os_family == "Debian"
    tags:
    - services

  - name: Restart ssh on Debian-like
    service:
      name: ssh
      state: restarted
    when: ansible_os_family == "Debian"
    tags:
    - services
    - ssh
